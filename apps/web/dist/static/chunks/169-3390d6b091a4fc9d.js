"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[169],{501:function(e,t,a){a.d(t,{Hu:function(){return getMessagesForMatch},Ai:function(){return getProfile},xE:function(){return getResearchPostById},sk:function(){return markMessagesAsRead},bG:function(){return sendMessage},Vp:function(){return setupMessageListener},gg:function(){return uploadAvatar}});var r=a(8449),s=a(4683);(0,s.eI)((()=>{let e="https://yltnvmypasnfdgtnyhwg.supabase.co";if(!e)throw Error("Missing Supabase URL");return e})(),(()=>{let e="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlsdG52bXlwYXNuZmRndG55aHdnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNDcxNTMsImV4cCI6MjA1OTkyMzE1M30.ajCPb95af8_It1m_D4yGJhErKuLEtqqfqk8Yq2n4MCw";if(!e)throw Error("Missing Supabase key");return e})());let i=r.z.object({id:r.z.string().uuid(),user_id:r.z.string().uuid().optional(),updated_at:r.z.date().optional().nullable(),first_name:r.z.string().min(1,"First name is required").max(255).optional().nullable(),last_name:r.z.string().min(1,"Last name is required").max(255).optional().nullable(),email:r.z.string().email().optional().nullable(),avatar_url:r.z.string().url().optional().nullable(),institution:r.z.string().max(255).optional().nullable(),bio:r.z.string().max(2e3).optional().nullable(),website:r.z.string().url().optional().nullable(),skills:r.z.array(r.z.string()).optional().nullable(),interests:r.z.array(r.z.string()).optional().nullable(),collaboration_pitch:r.z.string().max(1e3,"Collaboration pitch must be 1000 characters or less.").optional().nullable(),location:r.z.string().max(255).optional().nullable(),field_of_study:r.z.string().max(255).optional().nullable(),availability:r.z.enum(["full-time","part-time","weekends","not-available"]).optional().nullable()});r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),updated_at:r.z.string().datetime().optional(),title:r.z.string().min(5).max(100),content:r.z.string().min(20),user_id:r.z.string().uuid(),tags:r.z.array(r.z.string()).optional(),visibility:r.z.enum(["public","private","connections"]).default("public"),is_boosted:r.z.boolean().default(!1),boost_end_date:r.z.string().datetime().optional().nullable(),engagement_count:r.z.number().int().default(0)}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),user_id_1:r.z.string().uuid(),user_id_2:r.z.string().uuid(),status:r.z.enum(["pending","matched","rejected"]).default("pending")}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),name:r.z.string().min(3).max(50),description:r.z.string().max(500).optional(),creator_id:r.z.string().uuid(),logo_url:r.z.string().url().optional().nullable(),activity_score:r.z.number().int().default(0),member_count:r.z.number().int().default(1)}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),updated_at:r.z.string().datetime().optional(),title:r.z.string().min(5).max(100),content:r.z.string().min(20),user_id:r.z.string().uuid(),tags:r.z.array(r.z.string()).optional().nullable(),visibility:r.z.enum(["public","private","connections"]).default("public"),is_boosted:r.z.boolean().default(!1),engagement_count:r.z.number().int().default(0)}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),user_id:r.z.string().uuid(),project_idea:r.z.string().min(20),field:r.z.string(),status:r.z.enum(["pending","matched","rejected"]).default("pending"),matched_mentor_id:r.z.string().uuid().optional().nullable()}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),user_id:r.z.string().uuid(),project_id:r.z.string().uuid(),content_hash:r.z.string(),timestamp:r.z.string().datetime(),blockchain_tx:r.z.string().optional().nullable()});let n=r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),sender_id:r.z.string().uuid(),receiver_id:r.z.string().uuid(),match_id:r.z.string().uuid(),content:r.z.string(),is_read:r.z.boolean().default(!1)});r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),user_id:r.z.string().uuid(),original_text:r.z.string(),review_content:r.z.string(),suggested_edits:r.z.string().optional(),suggested_citations:r.z.array(r.z.string()).optional(),quality_score:r.z.number().min(0).max(100).optional()}),r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime().optional(),user_id:r.z.string().uuid(),stripe_customer_id:r.z.string(),stripe_subscription_id:r.z.string(),status:r.z.enum(["active","canceled","past_due","trialing"]).default("trialing"),plan_type:r.z.enum(["free","premium"]).default("free"),current_period_end:r.z.string().datetime()}),r.z.object({id:r.z.string().uuid(),user_id:r.z.string().uuid(),research_post_id:r.z.string().uuid(),status:r.z.enum(["interested","matched","dismissed","saved"]).default("interested"),created_at:r.z.string().datetime().optional(),updated_at:r.z.string().datetime().optional()}),r.z.object({id:r.z.string().uuid(),user_id:r.z.string().uuid(),type:r.z.enum(["new_match_suggestion","new_direct_match","new_message","project_update","mention","general_alert","feedback_request"]),content:r.z.string().max(500),is_read:r.z.boolean().default(!1),link_to:r.z.string().optional().nullable(),sender_id:r.z.string().uuid().optional().nullable(),created_at:r.z.string().datetime().optional()}),r.z.object({id:r.z.string().uuid(),research_post_id:r.z.string().uuid(),uploader_id:r.z.string().uuid(),file_name:r.z.string().min(1).max(255),file_path:r.z.string(),file_type:r.z.string(),file_size:r.z.number().int().positive(),description:r.z.string().max(500).optional().nullable(),created_at:r.z.string().datetime().optional(),updated_at:r.z.string().datetime().optional()}),r.z.object({id:r.z.string().uuid(),matcher_user_id:r.z.string().uuid({message:"Matcher user ID must be a valid UUID."}),matchee_user_id:r.z.string().uuid({message:"Matchee user ID must be a valid UUID."}),status:r.z.enum(["matched","rejected"],{message:"Status must be either 'matched' or 'rejected'."}),created_at:r.z.date().optional()});let SupabaseError=class SupabaseError extends Error{constructor(e,t=400,a){super(e),this.name="SupabaseError",this.status=t,this.code=a}};let o="https://yltnvmypasnfdgtnyhwg.supabase.co",l="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlsdG52bXlwYXNuZmRndG55aHdnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNDcxNTMsImV4cCI6MjA1OTkyMzE1M30.ajCPb95af8_It1m_D4yGJhErKuLEtqqfqk8Yq2n4MCw";o&&l||console.error("Missing Supabase environment variables");let d=null;function getBrowserClient(){return d||(d=function(){if(!o||!l)throw new SupabaseError("Missing Supabase environment variables for client",500);return(0,s.eI)(o,l,{auth:{persistSession:!0,autoRefreshToken:!0}})}())}let getProfile=async e=>{let t=getBrowserClient();try{let{data:a,error:r}=await t.from("profiles").select("*").eq("id",e).single();if(r){if("PGRST116"===r.code)return null;throw new SupabaseError("Error fetching profile: ".concat(r.message),r.code?parseInt(r.code):500,r.code)}return i.parse(a)}catch(e){if(console.error("Error in getProfile:",e),e instanceof SupabaseError)throw e;if(e instanceof r.z.ZodError)throw new SupabaseError("Profile data validation failed: ".concat(e.errors.map(e=>e.message).join(", ")),400);throw new SupabaseError(e.message||"Failed to get profile",(null==e?void 0:e.status)||500)}},getMessagesForMatch=async e=>{let t=getBrowserClient();try{let{data:a,error:r}=await t.from("messages").select("\n        *,\n        profiles:sender_id (\n          first_name,\n          last_name,\n          avatar_url\n        )\n      ").eq("match_id",e).order("created_at",{ascending:!0});if(r)throw new SupabaseError("Error fetching messages: ".concat(r.message),r.code?parseInt(r.code):500,r.code);return(a||[]).map(e=>n.parse(e))}catch(e){if(console.error("Error in getMessagesForMatch:",e),e instanceof SupabaseError)throw e;if(e instanceof r.z.ZodError)throw new SupabaseError("Message data validation failed: ".concat(e.errors.map(e=>e.message).join(", ")),400);throw new SupabaseError(e.message||"Failed to get messages",(null==e?void 0:e.status)||500)}},sendMessage=async e=>{let t=getBrowserClient(),a=n.omit({id:!0,created_at:!0,is_read:!0}).parse(e);try{let{data:e,error:r}=await t.from("messages").insert(a).select("*").single();if(r)throw new SupabaseError("Error sending message: ".concat(r.message),r.code?parseInt(r.code):500,r.code);if(!e)throw new SupabaseError("No data returned after sending message",500);return n.parse(e)}catch(e){if(console.error("Error in sendMessage:",e),e instanceof SupabaseError)throw e;if(e instanceof r.z.ZodError)throw new SupabaseError("Send message data validation failed: ".concat(e.errors.map(e=>e.message).join(", ")),400);throw new SupabaseError(e.message||"Failed to send message",(null==e?void 0:e.status)||500)}},setupMessageListener=(e,t)=>{let a=getBrowserClient(),s=a.channel("messages-match-".concat(e)).on("postgres_changes",{event:"INSERT",schema:"public",table:"messages",filter:"match_id=eq.".concat(e)},e=>{console.log("New message received via listener:",e);try{let a=n.parse(e.new);t(a)}catch(e){console.error("Error parsing new message from listener:",e),e instanceof r.z.ZodError&&console.error("Zod validation errors:",e.errors)}}).subscribe((t,a)=>{a&&console.error("Error subscribing to messages for match ".concat(e,":"),a)});return()=>{s&&a.removeChannel(s)}},uploadAvatar=async(e,t)=>{if(!t)return null;let a=t.name.split(".").pop(),r="".concat(e,"-").concat(Date.now(),".").concat(a),s=getBrowserClient();try{let{data:e,error:a}=await s.storage.from("avatars").upload(r,t,{cacheControl:"3600",upsert:!1});if(a)throw new SupabaseError("Avatar upload failed: ".concat(a.message),(null==a?void 0:a.statusCode)||500);if(!e||!e.path)throw new SupabaseError("Avatar upload failed to return a path.",500);let{data:i}=s.storage.from("avatars").getPublicUrl(e.path);return{path:e.path,url:i.publicUrl}}catch(e){if(console.error("Error uploading avatar in API wrapper:",e),e instanceof SupabaseError)throw e;throw new SupabaseError(e.message||"Failed to upload avatar",(null==e?void 0:e.status)||500)}},u=r.z.object({id:r.z.string().uuid(),file_name:r.z.string(),file_path:r.z.string(),file_type:r.z.string(),file_size:r.z.number().int(),description:r.z.string().nullable().optional(),created_at:r.z.string().datetime()}),c=r.z.object({id:r.z.string().uuid(),created_at:r.z.string().datetime(),title:r.z.string(),content:r.z.string(),user_id:r.z.string().uuid(),tags:r.z.array(r.z.string()).nullable().optional(),visibility:r.z.enum(["public","private","connections"]),is_boosted:r.z.boolean().nullable().optional(),engagement_count:r.z.number().int().nullable().optional(),profiles:i.pick({first_name:!0,last_name:!0,avatar_url:!0,institution:!0,id:!0}).nullable(),project_files:r.z.array(u).optional()}),getResearchPostById=async e=>{let t=getBrowserClient();try{let{data:a,error:r}=await t.from("research_posts").select("\n        *,\n        profiles (\n          id,\n          first_name,\n          last_name,\n          avatar_url,\n          institution\n        )\n      ").eq("id",e).single();if(r){if("PGRST116"===r.code)return null;throw new SupabaseError("Error fetching research post: ".concat(r.message),r.code?parseInt(r.code):500,r.code)}if(!a)return null;let{data:s,error:i}=await t.from("project_files").select("*").eq("research_post_id",e);i&&console.error("Error fetching files for post ".concat(e,":"),i);let n={...a,project_files:s||[]};return c.parse(n)}catch(t){if(console.error("Error in getResearchPostById for post ".concat(e,":"),t),t instanceof SupabaseError)throw t;if(t instanceof r.z.ZodError)throw new SupabaseError("Research post data validation failed: ".concat(t.errors.map(e=>e.message).join(", ")),400,"ZOD_VALIDATION_ERROR");throw new SupabaseError(t.message||"Failed to get research post",(null==t?void 0:t.status)||500)}};r.z.object({matchId:r.z.string().uuid(),otherUserId:r.z.string().uuid(),otherUserFirstName:r.z.string().nullable().optional(),otherUserLastName:r.z.string().nullable().optional(),otherUserAvatarUrl:r.z.string().url().nullable().optional(),lastMessageContent:r.z.string().nullable().optional(),lastMessageSenderId:r.z.string().uuid().nullable().optional(),lastMessageCreatedAt:r.z.string().datetime().nullable().optional(),unreadCount:r.z.number().int().default(0)});let markMessagesAsRead=async(e,t)=>{let a=getBrowserClient();try{let{error:r}=await a.from("messages").update({is_read:!0,updated_at:new Date().toISOString()}).eq("match_id",e).eq("receiver_id",t).eq("is_read",!1);if(r)throw new SupabaseError("Error marking messages as read: ".concat(r.message),500,r.code)}catch(e){if(console.error("Error in markMessagesAsRead:",e),e instanceof SupabaseError)throw e;throw new SupabaseError(e.message||"Failed to mark messages as read",(null==e?void 0:e.status)||500)}}},4962:function(e,t,a){a.d(t,{aK:function(){return i},tN:function(){return s}});var r=a(3265);let s=(0,r.Ue)(e=>({user:null,profile:null,isLoading:!0,setUser:t=>e({user:t}),setProfile:t=>e({profile:t}),setLoading:t=>e({isLoading:t}),signOut:()=>e({user:null,profile:null,isLoading:!1}),clearAuth:()=>e({user:null,profile:null,isLoading:!1})}));(0,r.Ue)(e=>({swipedUsers:[],likedUsers:[],matches:[],addSwipedUser:t=>e(e=>({swipedUsers:[...e.swipedUsers,t]})),addLikedUser:t=>e(e=>({likedUsers:[...e.likedUsers,t]})),setMatches:t=>e({matches:t}),addMatch:t=>e(e=>({matches:[...e.matches,t]})),resetSwipeState:()=>e({swipedUsers:[],likedUsers:[],matches:[]})}));let i=(0,r.Ue)((e,t)=>({currentChatUserId:null,unreadMessages:{},totalUnreadMessages:0,setCurrentChatUserId:t=>e({currentChatUserId:t}),setUnreadCount:(a,r)=>{let s=t().unreadMessages[a]||0,i=t().totalUnreadMessages-s+r;e(e=>({unreadMessages:{...e.unreadMessages,[a]:r},totalUnreadMessages:Math.max(0,i)}))},incrementUnreadCount:t=>{e(e=>({unreadMessages:{...e.unreadMessages,[t]:(e.unreadMessages[t]||0)+1},totalUnreadMessages:e.totalUnreadMessages+1}))},resetUnreadCount:a=>{let r=t().unreadMessages[a]||0;e(e=>({unreadMessages:{...e.unreadMessages,[a]:0},totalUnreadMessages:Math.max(0,e.totalUnreadMessages-r)}))},setTotalUnreadMessages:t=>e({totalUnreadMessages:t})}));(0,r.Ue)(e=>({sidebarOpen:!1,darkMode:window.matchMedia("(prefers-color-scheme: dark)").matches,toggleSidebar:()=>e(e=>({sidebarOpen:!e.sidebarOpen})),setSidebarOpen:t=>e({sidebarOpen:t}),toggleDarkMode:()=>e(e=>({darkMode:!e.darkMode})),setDarkMode:t=>e({darkMode:t})})),(0,r.Ue)(e=>({posts:[],isLoading:!1,hasMore:!0,setPosts:t=>e({posts:t}),appendPosts:t=>e(e=>({posts:[...e.posts,...t]})),setLoading:t=>e({isLoading:t}),setHasMore:t=>e({hasMore:t}),resetPosts:()=>e({posts:[],isLoading:!1,hasMore:!0})}))}}]);